Part II - Explorative analysis

1) Data acquistion
  The three ouput files from step I (Part I - Growth characteristics): 
  formattedData1.summary
  formattedData2.summary
  formattedData3.summary
  are the output files we needed for next step analysis.
  
2) Data merge and re-formatting
  User are recomended to manually open the files using excel and merge all data into 1 file.
    ----------
    	  Growth			
    Well	Rate	  R	Max OD	 lag time (minutes)
    A1	0	----	----	
    B2	0.01116	0.99884	0.381	134.2
    B3	0.00894	0.98968	0.39	154.4
    B4	0.00116	0.77958	0.074	366.9
    B5	0.00718	0.99055	0.377	156.9
    ...
    ----------
  Remove the 1st and 3rd rows, and 1st column of each files:
    ----------			
    Well	Rate	  R	Max OD	 lag time (minutes)
    B2	0.01116	0.99884	0.381	134.2
    B3	0.00894	0.98968	0.39	154.4
    B4	0.00116	0.77958	0.074	366.9
    B5	0.00718	0.99055	0.377	156.9
    ...
    ----------
  Users should then replace the column "Well" with the information on "Strain", "Carbohydrate", "Plate".
  And add this three columns:
    ----------
    Strain	Carbohydrate	Plate	Rate	  R2	MaxOD	 Lag
    BI	bG_CM_Curdlan	1	0.0041	0.99923	0.244	788.4
    BB	bG_CM_Curdlan	1	0.0066	0.99881	0.371	124.8
    BL	bG_CM_Curdlan	1	0.00062	0.87719	0.081	1186.5
    BA	bG_CM_Curdlan	1	0.00429	0.99592	0.397	372.4
    LB	bG_CM_Curdlan	1	0.00153	0.98275	0.161	604.3
    CC	bG_CM_Curdlan	1	0.00399	0.96654	0.272	338.7
    BI	bG_CM_Curdlan	2	0.00408	0.97886	0.257	760.5
    BB	bG_CM_Curdlan	2	0.00626	0.99683	0.392	135.9
    BL	bG_CM_Curdlan	2	0.00012	0.12571	0.099	1230
    BA	bG_CM_Curdlan	2	0.0038	0.93835	0.43	333.8
    LB	bG_CM_Curdlan	2	0.00252	0.91284	0.181	690.1
    CC	bG_CM_Curdlan	2	0.00451	0.9196	0.294	329.6
    ...
    ----------
  This files could be used for the explorative analysis.
  Since it include the raw data of the
  6 bacteria, 11 carbohydrates and 3 plates.
  
  Assume this file is named "combined.csv" for next-step analysis.
  
3) Data normalization (optional)
  This step is optional, as normalization might be necessary,
  depends on the objectives of analysis.
  Here, we normalized all the data (Rate, R2, MaxOD, Lag)
  of the 11 carbohydrates based on the value of glucose respectively.
  It is easily doen in excel using the "=A4/$B$4",
  assuming the A4 is the other 10 carbohydrates and B4 is glucose value.
  Thisnormalization should be done separatly on each plate and to each combination of bacteria.
  After normalization, the glucose value is 1 and all the glucose value are removed.
  
  The final normalized re-formatted input file look as:
    ----------
    Strain	Carbohydrate	Plate	Rate	  R2	MaxOD	 Lag
    BA	bG_CM_Curdlan	1	0.58051	0.99619	0.95663	3.81167
    BB	bG_CM_Curdlan	1	0.95791	1.00132	1.06304	0.92239
    BI	bG_CM_Curdlan	1	0.36738	1.00039	0.64042	5.87481
    BL	bG_CM_Curdlan	1	0.05150	0.88154	0.22626	5.57304
    CC	bG_CM_Curdlan	1	0.81263	0.97210	0.73118	1.23433
    LB	bG_CM_Curdlan	1	0.26471	0.98435	0.40863	0.97752
    BA	bG_CM_Curdlan	2	0.62193	0.94212	0.95982	5.52649
    BB	bG_CM_Curdlan	2	0.94277	1.02380	1.12968	1.50000
    BI	bG_CM_Curdlan	2	0.41633	0.98179	0.62683	4.68000
    BL	bG_CM_Curdlan	2	0.01210	0.12571	0.25063	5.32237
    CC	bG_CM_Curdlan	2	0.80969	0.94329	0.71883	1.16384
    ...
    ----------
    
  Users coud use this normalized file as input instead of the file in the previous section ""combined.csv".

4) Explorative analysis - R installation
  There are many different types of explorative analysis
  and only some of them are list here as example.
  Users could choose their favourite siftwares for the analysis.
  Here, we use R Studio for analysis.
  
  Download R for macOS version:
  https://cran.rstudio.com/bin/macosx/R-3.5.2.pkg
  Double click the installation icon to install.
  
  Download R Studio for macOS version:
  https://download1.rstudio.org/RStudio-1.1.463.dmg
  Double click the installation icon to install.
  
  Open R Studio in the Application ot see if the program run well.
  A command line interface can also be run to do the analysis,
  but we recommended using R Studio as we could check the input and graphics easily.

5) Explorative analysis - Overall distribution
  > setwd("~/Desktop/GrowthRate/GrowthRates 3.0 Mac/Examples Unix/ownData")
  > combined <- read.csv("~/Desktop/GrowthRate/GrowthRates 3.0 Mac/Examples Unix/ownData/combined.csv", stringsAsFactors=FALSE)
  > head(combined)
    X...Strain  Carbohydrate Plate    Rate      R2 MaxOD   Lag
    1         BI       Glucose     1 0.01116 0.99884 0.381 134.2
    2         BI        Inulin     1 0.00894 0.98968 0.390 154.4
    3         BI        bG_PCS     1 0.00116 0.77958 0.074 366.9
    4         BI       bMannan     1 0.00718 0.99055 0.377 156.9
    5         BI    bG_Curdlan     1 0.00797 0.99667 0.371 121.2
    6         BI bG_CM_Curdlan     1 0.00410 0.99923 0.244 788.4
  > tail(combined)
    X...Strain  Carbohydrate Plate    Rate      R2 MaxOD   Lag
    193         CC bG_CM_Curdlan     3 0.00235 0.90015 0.305 213.9
    194         CC    bG_Control     3 0.00736 0.94102 0.302 421.3
    195         CC   bG_Pachyman     3 0.00302 0.90083 0.387 166.9
    196         CC  bG_Laminarin     3 0.00197 0.85866 0.421  45.9
    197         CC           XOS     3 0.00762 0.99797 0.469 181.6
    198         CC     Lactulose     3 0.00757 0.96919 0.353 290.6
  > summary(combined)
    X...Strain        Carbohydrate           Plate        Rate         
    Length:198         Length:198         Min.   :1   Min.   :0.000010  
    Class :character   Class :character   1st Qu.:1   1st Qu.:0.004525  
    Mode  :character   Mode  :character   Median :2   Median :0.006110  
                                          Mean   :2   Mean   :0.006105  
                                          3rd Qu.:3   3rd Qu.:0.007352  
                                          Max.   :3   Max.   :0.019540  
          R2              MaxOD             Lag        
    Min.   :0.02417   Min.   :0.0450   Min.   :  43.8  
    1st Qu.:0.96461   1st Qu.:0.3402   1st Qu.: 132.0  
    Median :0.98377   Median :0.3885   Median : 209.2  
    Mean   :0.95006   Mean   :0.3555   Mean   : 305.8  
    3rd Qu.:0.99531   3rd Qu.:0.4230   3rd Qu.: 372.4  
    Max.   :0.99998   Max.   :0.5240   Max.   :1230.0
  
  # to see th eoverall distribution of R2 value
  > boxplot(combined$R2)
  
  # to see the correlation among Rate, MaxOD and Lag
  > library("PerformanceAnalytics")
  > my_data <- combined[, c(4,6,7)]
  > chart.Correlation(my_data, histogram=TRUE, pch=19) 
  
  # to check the vale of Rate, R2, MaxOD and Lag among the three plates
  # Rate of Plate 1, 2, and 3
  > my_data2 <- merge(merge(as.data.frame(combined[1:66,c(1,2,4)]), as.data.frame(combined[67:132,c(1,2,4)]), by=c("X...Strain", "Carbohydrate")), as.data.frame(combined[133:198,c(1,2,4)]), by=c("X...Strain", "Carbohydrate"))
  > colnames(my_data2) <- c("X...Strain","Carbohydrate","Plate_1", "Plate_2","Plate_3")
  > chart.Correlation(my_data2[,c(3,4,5)], histogram=TRUE, pch=19)
  # MaxOD of Plate 1, 2, and 3
  > my_data3 <- merge(merge(as.data.frame(combined[1:66,c(1,2,6)]), as.data.frame(combined[67:132,c(1,2,6)]), by=c("X...Strain", "Carbohydrate")), as.data.frame(combined[133:198,c(1,2,6)]), by=c("X...Strain", "Carbohydrate"))
  > colnames(my_data3) <- c("X...Strain","Carbohydrate","Plate_1", "Plate_2","Plate_3")
  > chart.Correlation(my_data3[,c(3,4,5)], histogram=TRUE, pch=19)
  # Lag of Plate 1, 2, and 3
  > my_data4 <- merge(merge(as.data.frame(combined[1:66,c(1,2,7)]), as.data.frame(combined[67:132,c(1,2,7)]), by=c("X...Strain", "Carbohydrate")), as.data.frame(combined[133:198,c(1,2,7)]), by=c("X...Strain", "Carbohydrate"))
  > colnames(my_data4) <- c("X...Strain","Carbohydrate","Plate_1", "Plate_2","Plate_3")
  > chart.Correlation(my_data4[,c(3,4,5)], histogram=TRUE, pch=19)
  # R2 of Plate 1, 2, and 3
  > my_data5 <- merge(merge(as.data.frame(combined[1:66,c(1,2,5)]), as.data.frame(combined[67:132,c(1,2,5)]), by=c("X...Strain", "Carbohydrate")), as.data.frame(combined[133:198,c(1,2,5)]), by=c("X...Strain", "Carbohydrate"))
  > colnames(my_data5) <- c("X...Strain","Carbohydrate","Plate_1", "Plate_2","Plate_3")
  > chart.Correlation(my_data5[,c(3,4,5)], histogram=TRUE, pch=19)
  
6) Explorative analysis - Boxplots to check the distribution
  # boxplot of Rate, R2, MaxOD, and Lag against the 6 bacteria strain (fermentation ability of different bacteria)
  # boxplot of Rate against the 6 bacteria
  > library(ggplot2)
  > ggplot(combined, aes(x=X...Strain, y=Rate, fill=X...Strain)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
  # boxplot of R2 against the 6 bacteria
  > ggplot(combined, aes(x=X...Strain, y=R2, fill=X...Strain)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
  # boxplot of MaxOD against the 6 bacteria
  > ggplot(combined, aes(x=X...Strain, y=MaxOD, fill=X...Strain)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
  # boxplot of Lag against the 6 bacteria
  > ggplot(combined, aes(x=X...Strain, y=Lag, fill=X...Strain)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
  
  # boxplot of Rate, R2, MaxOD, and Lag against the 11 carbohydrates (fermentability of carbohydrates)
  # boxplot of Rate against the 11 carbohydrate
  > ggplot(combined, aes(x=Carbohydrate, y=Rate, fill=Carbohydrate)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
  # boxplot of R2 against the 11 carbohydrate
  > ggplot(combined, aes(x=Carbohydrate, y=R2, fill=Carbohydrate)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
  # boxplot of MaxOD against the 11 carbohydrate
  > ggplot(combined, aes(x=Carbohydrate, y=MaxOD, fill=Carbohydrate)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
  # boxplot of Lag against the 11 carbohydrate
  > ggplot(combined, aes(x=Carbohydrate, y=Lag, fill=Carbohydrate)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
  
7) Explorative analysis - Heatmap
  # Heatmap  does not allow samples of the same name,
  # therefore, only the data of means of the 3 biological triplicate are used in heatmap.
  
  # we generate the matrix with mean first
  > library(tidyverse)
  > combined$x <- paste(combined$X...Strain,"-",combined$Carbohydrate)
  
  # matrix with mean of Rate
  > rate_only_mean <- combined[,c(4,8)] %>% group_by(x) %>% summarise(average = mean(Rate))
  > head(rate_only_mean)
    # A tibble: 6 x 2
      x                  average
      <chr>                <dbl>
    1 BA - Glucose       0.00696
    2 BA - Inulin        0.00547
    3 BA - Lactulose     0.00881
    4 BA - XOS           0.00568
    5 BA - bG_CM_Curdlan 0.00414
    6 BA - bG_Control    0.00540
    ...
  > summary(rate_only_mean)
            x                average        
    Length:66          Min.   :0.000250  
    Class :character   1st Qu.:0.004492  
    Mode  :character   Median :0.006288  
                       Mean   :0.006105  
                       3rd Qu.:0.007196  
                       Max.   :0.015740

  # matrix with mean of MaxOD
  > MaxOD_only_mean <- combined[,c(6,8)] %>% group_by(x) %>% summarise(average = mean(MaxOD))
  
  # matrix with mean of Lag
  > Lag_only_mean <- combined[,c(7,8)] %>% group_by(x) %>% summarise(average = mean(Lag))
  
  # heatmap_rate of Rate
  > rate_only_mean_long <- rate_only_mean %>% separate(x, c("Strain", "Carbohydrate"), "-")
  > rate_only_mean_wide <- as.matrix(column_to_rownames(remove_rownames(as.data.frame(spread(rate_only_mean_long, key = Strain, value = average))),var="Carbohydrate"))
  > heatmap(rate_only_mean_wide)
  
  # heatmap_rate of MaxOD
  > MaxOD_only_mean_long <- MaxOD_only_mean %>% separate(x, c("Strain", "Carbohydrate"), "-")
  > MaxOD_only_mean_wide <- as.matrix(column_to_rownames(remove_rownames(as.data.frame(spread(MaxOD_only_mean_long, key = Strain, value = average))),var="Carbohydrate"))
  > heatmap(MaxOD_only_mean_wide)
  
  # heatmap_rate of Lag
  > Lag_only_mean_long <- Lag_only_mean %>% separate(x, c("Strain", "Carbohydrate"), "-")
  > Lag_only_mean_wide <- as.matrix(column_to_rownames(remove_rownames(as.data.frame(spread(Lag_only_mean_long, key = Strain, value = average))),var="Carbohydrate"))
  > heatmap(Lag_only_mean_wide)



8) Explorative analysis - Principle component analysis, PCA
  # we use all the data point for PCA anlysis, i.e., not mean,
  # and there a total of 198 observation list was used.
  
  # prepare the PCA input format
  > combined$y <- paste(combined$X...Strain,"-",combined$Plate)
  > combined$z <- paste(combined$Carbohydrate,"-",combined$Plate)
  > library(tidyverse)
  # prepare the PCA input matrix for Rate based on 11 carbohydrates
  > all_rate_cho_long <- combined[,c(9,2,4)]
  > all_rate_cho_wide <- as.matrix(column_to_rownames(remove_rownames(as.data.frame(spread(all_rate_cho_long, key = Carbohydrate, value = Rate))),var="y"))
  # prepare the PCA input matrix for MaxOD based on 11 carbohydrates
  > all_MaxOD_cho_long <- combined[,c(9,2,6)]
  > all_MaxOD_cho_wide <- as.matrix(column_to_rownames(remove_rownames(as.data.frame(spread(all_MaxOD_cho_long, key = Carbohydrate, value = MaxOD))),var="y"))
  # prepare the PCA input matrix for Lag based on 11 carbohydrates
  > all_Lag_cho_long <- combined[,c(9,2,7)]
  > all_Lag_cho_wide <- as.matrix(column_to_rownames(remove_rownames(as.data.frame(spread(all_Lag_cho_long, key = Carbohydrate, value = Lag))),var="y"))
  
  # prepare the PCA input matrix for Rate based on 6 bacterial strains
  > all_rate_strain_long <- combined[,c(10,1,4)]
  >  all_rate_strain_wide <- as.matrix(column_to_rownames(remove_rownames(as.data.frame(spread(all_rate_strain_long, key = X...Strain, value = Rate))),var="z"))
  # prepare the PCA input matrix for MaxOD based on 6 bacterial strains
  > all_MaxOD_strain_long <- combined[,c(10,1,6)]
  > all_MaxOD_strain_wide <- as.matrix(column_to_rownames(remove_rownames(as.data.frame(spread(all_MaxOD_strain_long, key = X...Strain, value = MaxOD))),var="z"))
  # prepare the PCA input matrix for Lag based on 6 bacterial strains
  > all_Lag_strain_long <- combined[,c(10,1,7)]
  > all_Lag_strain_wide <- as.matrix(column_to_rownames(remove_rownames(as.data.frame(spread(all_Lag_strain_long, key = X...Strain, value = Lag))),var="z"))
  
  # perform PCA plot
  > library(ggfortify)
  > library(cluster)
  # PCA plot for Rate based on 11 carbohydrates
  > autoplot(pam(all_rate_cho_wide, 3, diss=FALSE, metric = "euclidean", stand=TRUE), label.size = 10, frame = TRUE, frame.type = 'norm', loadings.label=TRUE, loadings=TRUE, loadings.label.size = 7, loadings.colour='blue', loadings.label.alpha=0.7, loadings.label.vjust = -1.2) + geom_text(vjust=1.2, label=rownames(all_rate_cho_wide), size=6.5, alpha=0.7)
  # PCA plot for MaxOD based on 11 carbohydrates
  > autoplot(pam(all_MaxOD_cho_wide, 2, diss=FALSE, metric = "euclidean", stand=TRUE), label.size = 10, frame = TRUE, frame.type = 'norm', loadings.label=TRUE, loadings=TRUE, loadings.label.size = 7, loadings.colour='blue', loadings.label.alpha=0.7, loadings.label.vjust = -1.2) + geom_text(vjust=1.2, label=rownames(all_MaxOD_cho_wide), size=6.5, alpha=0.7)
  # PCA plot for Lag based on 11 carbohydrates
  > autoplot(pam(all_Lag_cho_wide, 3, diss=FALSE, metric = "euclidean", stand=TRUE), label.size = 10, frame = TRUE, frame.type = 'norm', loadings.label=TRUE, loadings=TRUE, loadings.label.size = 7, loadings.colour='blue', loadings.label.alpha=0.7, loadings.label.vjust = -1.2) + geom_text(vjust=1.2, label=rownames(all_Lag_cho_wide), size=6.5, alpha=0.7)
  
  # PCA plot for Rate based on 6 bacterial strains
  > autoplot(pam(all_rate_strain_wide, 32, diss=FALSE, metric = "euclidean", stand=TRUE), label.size = 10, frame = TRUE, frame.type = 'norm', loadings.label=TRUE, loadings=TRUE, loadings.label.size = 7, loadings.colour='blue', loadings.label.alpha=0.7, loadings.label.vjust = -1.2) + geom_text(vjust=1.2, label=rownames(all_rate_strain_wide), size=6.5, alpha=0.7)
  # PCA plot for MaxOD based on 6 bacterial strains
  > autoplot(pam(all_MaxOD_strain_wide, 4, diss=FALSE, metric = "euclidean", stand=TRUE), label.size = 10, frame = TRUE, frame.type = 'norm', loadings.label=TRUE, loadings=TRUE, loadings.label.size = 7, loadings.colour='blue', loadings.label.alpha=0.7, loadings.label.vjust = -1.2) + geom_text(vjust=1.2, label=rownames(all_MaxOD_strain_wide), size=6.5, alpha=0.7)
  # PCA plot for Lag based on 6 bacterial strains
  > autoplot(pam(all_Lag_strain_wide, 2, diss=FALSE, metric = "euclidean", stand=TRUE), label.size = 10, frame = TRUE, frame.type = 'norm', loadings.label=TRUE, loadings=TRUE, loadings.label.size = 7, loadings.colour='blue', loadings.label.alpha=0.7, loadings.label.vjust = -1.2) + geom_text(vjust=1.2, label=rownames(all_Lag_strain_wide), size=6.5, alpha=0.7)

EOF
